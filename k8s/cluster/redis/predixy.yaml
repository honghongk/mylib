# 레디스 클러스터 엔드포인트 프록시
# endpoint 빼다가 집어넣어야함



---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: test-honghong
  name: predixy
data:
  predixy.conf: |
    # info하면 뜨는거라고함
    Name Predixy
    # Bind 0.0.0.0:7617
    Bind 0.0.0.0:6379

    WorkerThreads 4
    # 기본 0 단위 M G
    MaxMemory 0

    # 기본 0 무제한 단위 초
    ClientTimeout 10

    BufSize 4096

    ################################### LOG ########################################

    Log ./predixy.log

    # 기본값 세팅없음 단위 d h m / K M G
    ## Examples:
    # LogRotate 1d 2G
    LogRotate 1d

    # 성능 / 정합성
    AllowMissLog true

    LogVerbSample 0
    LogDebugSample 0
    LogInfoSample 10000
    LogNoticeSample 1
    LogWarnSample 1
    LogErrorSample 1

    ################################### AUTHORITY ##################################
    ## Authority {
    ##     Auth [password] {
    ##         Mode read|write|admin
    ##         [KeyPrefix Prefix1 Prefix2...]
    ##         [ReadKeyPrefix Prefix1 Prefix2...]
    ##         [WriteKeyPrefix Prefix1 Prefix2...]
    ##     }...
    ## }

    # Authority {
    #     Auth {
    #         Mode write
    #     }
    #     Auth "#a complex password#" {
    #         Mode admin
    #     }
    # }

    ################################### SERVERS ####################################
    ##ClusterServerPool {
    ##    [Password xxx]                        #default no
    ##    [MasterReadPriority [0-100]]          #default 50
    ##    [StaticSlaveReadPriority [0-100]]     #default 0
    ##    [DynamicSlaveReadPriority [0-100]]    #default 0
    ##    [RefreshInterval number[s|ms|us]]     #default 1, means 1 second
    ##    [ServerTimeout number[s|ms|us]]       #default 0, server connection socket read/write timeout
    ##    [ServerFailureLimit number]           #default 10
    ##    [ServerRetryTimeout number[s|ms|us]]  #default 1
    ##    [KeepAlive seconds]                   #default 0, server connection tcp keepalive

    ##    Servers {
    ##        + addr
    ##        ...
    ##    }
    ##}
    ClusterServerPool {
        MasterReadPriority 60
        StaticSlaveReadPriority 50
        DynamicSlaveReadPriority 50
        RefreshInterval 1
        ServerTimeout 1
        ServerFailureLimit 10
        ServerRetryTimeout 1
        Servers {
            + 10.42.0.182:6379 
            + 10.42.0.183:6379 
            + 10.42.0.184:6379 
            + 10.42.0.185:6379 
            + 10.42.0.186:6379 
            + 10.42.0.187:6379 
        }
    }

    ################################### DATACENTER #################################
    ## LocalDC specify current machine dc
    # LocalDC bj

    ## DataCenter {
    ##    DC name {
    ##        AddrPrefix {
    ##            + IpPrefix
    ##            ...
    ##        }
    ##        ReadPolicy {
    ##            name priority [weight]
    ##            other priority [weight]
    ##        }
    ##    }
    ##    ...
    ## }


    ################################### COMMAND ####################################
    ## Custom command define, see command.conf
    ## CustomCommand {
    ##    command {                                      #command string, must be lowercase
    ##        [Mode read|write|admin[|[keyAt2|keyAt3]]   #default write, default key position is 1
    ##        [MinArgs [2-]]                             #default 2, including command itself
    ##        [MaxArgs [2-]]                             #default 2, must be MaxArgs >= MinArgs
    ##    }...
    ## }

    ################################### LATENCY ####################################
    ## Latency monitor define, see latency.conf
    ## LatencyMonitor name {
    ##     Commands {
    ##         + cmd
    ##         [- cmd]
    ##         ...
    ##     }
    ##     TimeSpan {
    ##         + TimeElapsedUS
    ##         ...
    ##     }
    ## }
    ## cmd is redis commands, "all" means all commands

    LatencyMonitor all {
        Commands {
            + all
            - blpop
            - brpop
            - brpoplpush
        }
        TimeSpan {
            + 100
            + 200
            + 300
            + 400
            + 500
            + 600
            + 700
            + 800
            + 900
            + 1000
            + 1200
            + 1400
            + 1600
            + 1700
            + 1800
            + 2000
            + 2500
            + 3000
            + 3500
            + 4000
            + 4500
            + 5000
            + 6000
            + 7000
            + 8000
            + 9000
            + 10000
        }
    }

    LatencyMonitor get {
        Commands {
            + get
        }
        TimeSpan {
            + 100
            + 200
            + 300
            + 400
            + 500
            + 600
            + 700
            + 800
            + 900
            + 1000
        }
    }

    LatencyMonitor set {
        Commands {
            + set
            + setnx
            + setex
        }
        TimeSpan {
            + 100
            + 200
            + 300
            + 400
            + 500
            + 600
            + 700
            + 800
            + 900
            + 1000
        }
    }

    LatencyMonitor blist {
        Commands {
            + blpop
            + brpop
            + brpoplpush
        }
        TimeSpan {
            + 1000
            + 2000
            + 3000
            + 4000
            + 5000
            + 6000
            + 7000
            + 8000
            + 9000
            + 10000
            + 20000
            + 30000
            + 40000
            + 50000
            + 60000
            + 70000
            + 80000
            + 90000
            + 100000
        }
    }


---

apiVersion: v1
kind: Service
metadata:
  name: predixy
  namespace: test-honghong
  labels:
    app: predixy
spec:
  # 아이피 범위 10.96.0.0/12 라고 에러뜸
  # clusterIP: 10.96.0.2
  type: NodePort
  # type: ClusterIP
  ports:
  - port: 6379
    # 안찍으면 랜덤
    # nodePort: 30000
    targetPort: 6379
    protocol: TCP
    name: redis
  # - port: 443
  #   protocol: TCP
  #   name: https
  selector:
    app: predixy
---


# haandol/predixy:latest

apiVersion: apps/v1
kind: Deployment
metadata:
  name: predixy
  namespace: test-honghong
  labels:
    app: redis-cluster
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: predixy
  template:
    metadata:
      labels:
        app: predixy
    spec:
      restartPolicy: Always
      affinity:
        nodeAffinity:
          # 우선순위 노드 없으면 아무데나
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            preference:
              matchExpressions:
              - key: app
                operator: In
                values:
                - proxy
      dnsPolicy: ClusterFirst
      terminationGracePeriodSeconds: 30
      containers:
      - name: predixy
        image: haandol/predixy:latest
        imagePullPolicy: IfNotPresent
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/predixy/conf
          name: predixy
        ports:
        - containerPort: 6379
          protocol: TCP
        # livenessProbe:
        #   tcpSocket:
        #     port: 6379
        #   successThreshold: 1
        #   failureThreshold: 3
        #   initialDelaySeconds: 10
        #   periodSeconds: 10
        #   timeoutSeconds: 1
        # readinessProbe:
        #   tcpSocket:
        #     port: 6379
        #   successThreshold: 1
        #   failureThreshold: 3
        #   initialDelaySeconds: 10
        #   periodSeconds: 10
        #   timeoutSeconds: 1
        # lifecycle:
        #   postStart:
        # resources:
        #   limits:
        #     memory: 16Mi
        #     cpu: 100m
        #     # ephemeral-storage: "2Gi"
        #   requests:
        #     memory: 16Mi
        #     cpu: 100m
        #     # ephemeral-storage: "2Gi"
      
      volumes:
      - name: predixy
        configMap:
          name: predixy
          items:
          - key: predixy.conf
            path: predixy.conf


---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: predixy
  namespace: test-honghong
  labels:
    app: predixy
spec:
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - resource:
      name: cpu 
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: predixy
